<?php

namespace sfrost2004\Magento\Command\Developer;

use N98\Magento\Command\AbstractMagentoStoreConfigCommand;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class AoeTemplateHintsCommand extends AbstractMagentoStoreConfigCommand
{
    /**
     * @var string
     */
    protected $commandName = 'dev:aoe-template-hints';

    /**
     * @var string
     */
    protected $commandDescription = 'Toggles template hints of Aoe_TemplateHints extension [sfrost2004]';

    /**
     * @var string
     */
    protected $toggleComment = 'Aoe Template Hints';

    /**
     * @var string
     */
    protected $configPath = 'dev/aoe_templatehints/enabled';

    /**
     * @var string
     */
    protected $scope = self::SCOPE_STORE_VIEW;

    /**
     * Add admin store to interactive prompt
     *
     * @var bool
     */
    protected $withAdminStore = true;


	/**
	 * @param InputInterface $input
	 * @param OutputInterface $output
	 *
	 * @return int|void
	 */
	protected function execute( InputInterface $input, OutputInterface $output ) {
		if(!$this->_checkAoeTemplateHintsIsInstalled()) {
			$output->writeln('<error>Aoe Template Hints is required but is not installed or enabled</error>');
			exit;
		}
		parent::execute( $input, $output ); // TODO: Change the autogenerated stub
	}

	/**
	 * @param \Mage_Core_Model_Store $store
	 * @param bool $disabled
	 */
	protected function _checkAoeTemplateHintsIsInstalled()
	{
		$modules = []; //\Mage::app()->getConfig()->getNode('modules')->asArray();

		$isAoeTemplateHintsInstalled = false;
		foreach ($modules as $moduleName => $moduleInfo) {
			$active = isset($moduleInfo['active']) ? $moduleInfo['active'] : '';

			if($moduleName == "Aoe_TemplateHints" && $active == true) {
				$isAoeTemplateHintsInstalled = true;
				break;
			}
		}

		return $isAoeTemplateHintsInstalled;
	}

	/**
     * If required, handle the output and possible change of the developer IP restrictions
     *
     * @param \Mage_Core_Model_Store $store
     * @param bool $disabled
     */
    protected function _afterSave(\Mage_Core_Model_Store $store, $disabled)
    {
        $this->detectAskAndSetDeveloperIp($store, $disabled);
    }

}
